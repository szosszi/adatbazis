A MongoDB Atlas-ban (vagy a Compass-ban) navigáljon a sample_mflix adatbázishoz, és kérdezze le a movies gyűjteményt az alábbiak szerint:

A műfajok közül a legelső "Short" legyen ÉS
Az év 1945 és 1970 közé essen (a határokat is beleértve)
Csak a filmek címe és az év jelenjen meg
Rendezzük sorba a filmeket év szerint, azon belül cím szerint növekvően
Beadandó: a Filter, Project és a Sort részbe írt kódok

{"genres.0": "Short", "year": {$lt: 1971}, "year": {$gt: 1944}}
{"title": 1, "year": 1, "_id": 0}
{"year": 1, "title": 1}

A MongoDB shell-ben csatlakozzon a sample_mflix adatbázishoz, és kérdezze le a users gyűjteményt az alábbiak szerint:

Csak a felhasználók neve és email címe jelenjen meg
Az email cím tartalmazza a .com karaktersorozatot.
Beadandó: a megfelelő utasítás
 db.users.find( { "email": { $regex: /.com/ } }, { "name": 1, "email": 1, "_id": 0 })

A MongoDB shell-ben csatlakozzon a sample_mflix adatbázishoz, és kérdezze le a movies gyűjteményt az alábbiak szerint:

A lekérdezés feleljen meg a következő SQL lekérdezésnek:

SELECT rated, AVG(runtime)
FROM movies
WHERE year > 1950
GROUP BY rated


Beadandó a lekérdező utasítás
db.movies.aggregate( [{$group: {_id: "$rated", atlagido: {$avg: "$runtime"}}}, {$match: {"year": {$gt: 1950}}}])







Csatlakozzon a Movies adatbázishoz a Neo4J Sandbox-ban (vagy a Desktop-ban), és kérdezze le a következőket:

Listázzuk a filmek szereplőit
A szereplő neve, a film címe és a film megjelenés éve jelenjen meg
Szűrjünk az 1960 utáni évekre
Nevezzük el a megjelenített mezőket
Rendezzük sorba az eredményt évszám szerint csökkenően
Beadandó: a megfelelő utasítás

MATCH (p:Person)-[:ACTED_IN]->(m:Movie)
WHERE m.released > 1960
RETURN p.name AS `name`, m.title AS `title`,  m.released AS `date`
ORDER BY date DESC

A neo4j Sandbox-ban (vagy a Desktop-ban) csatlakozzon a Movies adatbázishoz, és kérdezze le a következő SQL-lekérdezésnek megfelelő adatokat:

SELECT TOP 5  p.name AS Director, COUNT(*) AS NumMoviesDirected

FROM movies m JOIN person p ON m.directorId = p.personId

GROUP BY p.name

ORDER BY NumMoviesDirected DESC


MATCH (p:Person)-[:DIRECTED]->(m:Movie)
RETURN p.name, COUNT(*)
ORDER BY COUNT(*) DESC
LIMIT 5

